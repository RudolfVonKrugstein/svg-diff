on:
  push:
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'

name: Release to public wasm es module, after linting and testing

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
          name: Clippy Output

  test:
    name: Test
    env:
      PROJECT_NAME_UNDERSCORE: svg_diff
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
      RUSTDOCFLAGS: -Cpanic=abort
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}
      - name: Generate test result and coverage report
        run: |
          cargo install cargo2junit grcov;
          cargo test $CARGO_OPTIONS -- -Z unstable-options --format json | cargo2junit > results.xml;
          zip -0 ccov.zip `find . \( -name "$PROJECT_NAME_UNDERSCORE*.gc*" \) -print`;
          grcov ccov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" --ignore "tests/*" -o lcov.info;
      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: results.xml

  check_version:
    name: Check, that the version is correctly setup (with the git tag)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Display the ref
        run: echo $GITHUB_REF
      - name: Calculate and compare tag with version
        run: |
          export EXPECTED_VERSION=${GITHUB_REF#refs/*/v}
          export CRATE_VERSION=$(cat Cargo.toml | grep "^version.*$")
          export CRATE_VERSION=${CRATE_VERSION#version*=*\"}
          export CRATE_VERSION=${CRATE_VERSION%\"}
          echo "Version from tag=${EXPECTED_VERSION}\nVersion in Config.toml=${CRATE_VERSION}"
          if [ "$EXPECTED_VERSION" != "$CRATE_VERSION" ]; then
              echo "Version are not equal"
              exit 1
          fi
  release:
    name: Release to npmjs.com
    needs: [check, fmt, clippy, test, check_version]
    env:
      PROJECT_NAME_UNDERSCORE: svg_diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install wasm build
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build wasm package
        run: make wasm
      - name: Rename the npm package
        run: sed -i 's/"svg-diff"/"svg-diff-wasm"/g' pkg/package.json
      - name: "Store npm token"
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> $HOME/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPMJS_COM_API_TOKEN }}
      - name: 'Publish to npmjs.com'
        run: |
          export VERSION_FROM_TAG=${GITHUB_REF#refs/*/v}
          if [[ "$VERSION_FROM_TAG" =~ ^[0-9]+\.[0-9]\.[0-9]+$ ]];
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            wasm-pack publish --access public
          elif [[ "$VERSION_FROM_TAG" =~ ^[0-9]+\.[0-9]\.[0-9]+ ]];
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            wasm-pack publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
